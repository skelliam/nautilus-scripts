#!/usr/bin/python2
import pygtk
pygtk.require('2.0')
import gtk
import sys, os, logging, re, subprocess
from scripthelpers import *

def loggerSetup():
   logging.basicConfig(
      level=logging.DEBUG,
      format='%(asctime)s:%(levelname)s:%(name)s:%(message)s',
      filename="out.log",
      filemode='a'
   )

   stdout_logger = logging.getLogger('STDOUT')
   sl = StreamToLogger(stdout_logger, logging.INFO)
   sys.stdout = sl
    
   stderr_logger = logging.getLogger('STDERR')
   sl = StreamToLogger(stderr_logger, logging.ERROR)
   sys.stderr = sl



def main():
   loggerSetup()

   pdf_files=""
   files = os.getenv('NEMO_SCRIPT_SELECTED_FILE_PATHS')
   myfiles = files.split()
   
   for file in myfiles:
      #get rid of single quotes if they exist (Thunar workaround) 
      if file.startswith("'") and file.endswith("'"):
          file = file[1:-1]
      base = os.path.basename(file)
      path, ext = os.path.splitext(file)
      dirname = os.path.dirname(file)

      if (ext == '.pdf'):
         pdf_files += (base + " ")

   number_of_pdf_files = len(pdf_files.split())

   if (number_of_pdf_files > 1):
      auto_name = 'cat' + str(now()) + '.pdf'
      os.system("pdftk %s cat output %s" %(pdf_files, auto_name))

      msg = "Concatenated %d pdf files.\nRename output file?" %(number_of_pdf_files)
      ans = getDialogMessage(msg, auto_name)
      if ((ans != gtk.RESPONSE_NO) and (ans != None)):
         if os.path.exists(ans):
            ans += str(now())
         os.rename(auto_name, ans)
         
      ans = infoMessage("Delete orignals?")
      if (ans == gtk.RESPONSE_YES):
         os.system("rm %s" %(pdf_files))

if __name__ == "__main__":
    main()
